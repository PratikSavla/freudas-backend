server:
  port: ${PORT}
spring:
#  mail:
#    host: smtp.gmail.com
#    port: 587
#    username: freudas.mail@gmail.com
#    password: 20020a056a0008ce00b004f66dcd4f1csm13212777
#    properties:
#      mail:
#        smtp:
#          auth: true
#          starttls:
#            enable: true
  datasource:
#    url: jdbc:postgresql://localhost:5432/freudas
    url: ${DATABASE_URL}
    username: postgres
    password: postgres
  jpa:
    database: postgresql
    show-sql: true
    hibernate:
      ddl-auto: update
    datasource:
      platform: postgres
      url: ${DATABASE_URL}
#      url: jdbc:postgresql://localhost:5432/freudas
      #            username: postgres
      #            password: postgres
      driverClassName: org.postgresql.Driver
  #    jpa:
  #        show-sql: true
  #        hibernate:
  #            ddl-auto: update
  #            naming-strategy: org.hibernate.cfg.ImprovedNamingStrategy
  #        properties:
  #            hibernate:
  #                dialect: org.hibernate.dialect.MySQL5InnoDBDialect
  security:
    oauth2:
      client:
        registration:
          google:
            client-id: 489142523484-fkg9uis8kjmvrenn643nuud5q0ilrr3u.apps.googleusercontent.com
            client-secret: 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
            redirectUri: "{baseUrl}/oauth2/callback/{registrationId}"
            scope:
              - email
              - profile
#            okta:
#              clientId: 0oa3lm4glkDXXm6HK5d7
#              clientSecret: LOGlSzMrM574eNrTO8OQGd0mqzN_LAaCkN-z5ZZN
#              redirectUri: "{baseUrl}/oauth2/callback/{registrationId}"
#              issuer: https://dev-48554975.okta.com/oauth2/default
#              scope:
#                - email
#                - profile
#                - openid
#            github:
#              clientId: d3e47fc2ddd966fa4352
#              clientSecret: 3bc0f6b8332f93076354c2a5bada2f5a05aea60d
#              redirectUri: "{baseUrl}/oauth2/callback/{registrationId}"
#              scope:
#                - user:email
#                - read:user
#          provider:
#            facebook:
#              authorizationUri: https://www.facebook.com/v3.0/dialog/oauth
#              tokenUri: https://graph.facebook.com/v3.0/oauth/access_token
#              userInfoUri: https://graph.facebook.com/v3.0/me?fields=id,first_name,middle_name,last_name,name,email,verified,is_verified,picture.width(250).height(250)
app:
  auth:
    tokenSecret: 04ca023b39512e46d0c2cf4b48d5aac61d34302994c87ed4eff225dcf3b0a218739f3897051a057f9b846a69ea2927a587044164b7bae5e1306219d50b588cb1
    tokenExpirationMsec: 2592000000
  cors:
    allowedOrigins: https://freudas-webapp.herokuapp.com,http://localhost:3000
  oauth2:
    # After successfully authenticating with the OAuth2 Provider,
    # we'll be generating an auth token for the user and sending the token to the
    # redirectUri mentioned by the client in the /oauth2/authorize request.
    # We're not using cookies because they won't work well in mobile clients.
    authorizedRedirectUris:
      - https://freudas-webapp.herokuapp.com/oauth2/redirect
      - http://localhost:3000/oauth2/redirect
      - myandroidapp://oauth2/redirect
      - myiosapp://oauth2/redirect